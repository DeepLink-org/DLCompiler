#ifndef NPU_DIALECT_TYPES
#define NPU_DIALECT_TYPES

include "mlir/IR/AttrTypeBase.td"
include "mlir/IR/BuiltinTypeInterfaces.td"
include "dicp/Dialect/NPU/IR/NPUDialect.td"

class NPUTypeDef<string name, string _mnemonic, list<Trait> traits = []>
    : TypeDef<NPU_Dialect, name, traits> {
    // Used by printer/parser
    let mnemonic = _mnemonic;
}


def NPU_TPipType : NPUTypeDef<"TPip", "tpip", []> {
  let summary = "queue type (`::mlir::dicp::npu::TPipType`) in NPU IR type system";
  let description = [{tpip}];
  let parameters = (ins
    "uint32_t":$type
  );
  let builders = [
      TypeBuilder<(ins "unsigned":$type), [{
        return $_get($_ctxt, type);
      }]>
    ];
  let hasCustomAssemblyFormat = 1;
  let skipDefaultBuilders = 1;
}

def NPU_TQueueType : NPUTypeDef<"TQueue", "tqueue", []> {
  let summary = "queue type (`::mlir::dicp::npu::TQueueType`) in NPU IR type system";
  let description = [{queue}];
  let parameters = (ins
    "uint32_t":$type
  );
  let builders = [
      TypeBuilder<(ins "unsigned":$type), [{
        return $_get($_ctxt, type);
      }]>
    ];
  let hasCustomAssemblyFormat = 1;
  let skipDefaultBuilders = 1;
}

#endif
