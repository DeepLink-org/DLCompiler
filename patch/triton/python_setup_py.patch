diff --git a/python/setup.py b/python/setup.py
index 7bae45641..1187f8170 100644
--- a/python/setup.py
+++ b/python/setup.py
@@ -160,6 +160,13 @@ class Package(NamedTuple):
 # json
 def get_json_package_info():
     url = "https://github.com/nlohmann/json/releases/download/v3.11.3/include.zip"
+    local_json_path = os.environ.get("JSON_PATH", "")
+    if local_json_path != "":
+        if os.path.exists(local_json_path):
+            url = "file://" + local_json_path
+            print(f"JSON_PATH {local_json_path} exists. url={url}")
+        else:
+            print(f"JSON_PATH {local_json_path} does not exist.")
     return Package("json", "", url, "JSON_INCLUDE_DIR", "", "JSON_SYSPATH")
 
 
@@ -208,6 +215,13 @@ def get_llvm_package_info():
         rev = llvm_hash_file.read(8)
     name = f"llvm-{rev}-{system_suffix}"
     url = f"https://oaitriton.blob.core.windows.net/public/llvm-builds/{name}.tar.gz"
+    local_llvm_tgz_path = os.environ.get("LLVM_TGZ_PATH", "")
+    if local_llvm_tgz_path != "":
+        if os.path.exists(local_llvm_tgz_path):
+            url = "file://" + local_llvm_tgz_path
+            print(f"LLVM_TGZ_PATH {local_llvm_tgz_path} exists. url={url}")
+        else:
+            print(f"LLVM_TGZ_PATH {local_llvm_tgz_path} does not exist.")
     return Package("llvm", name, url, "LLVM_INCLUDE_DIRS", "LLVM_LIBRARY_DIR", "LLVM_SYSPATH")
 
 
@@ -486,6 +500,26 @@ class CMakeBuild(build_ext):
         subprocess.check_call(["cmake", "--build", "."] + build_args, cwd=cmake_dir)
         subprocess.check_call(["cmake", "--build", ".", "--target", "mlir-doc"], cwd=cmake_dir)
 
+        cmake_build_dir = get_cmake_dir()
+        tools_src_dir = os.path.join(
+            cmake_build_dir,
+            "third_party/dicp_triton/third_party/triton_shared/tools/triton-shared-opt/"
+        )
+        dicp_opt_src = os.path.join(
+            cmake_build_dir,
+            "third_party/dicp_triton/tools/dicp_triton_opt/"
+        )
+        dicp_triton_dst_dir = os.path.join(os.path.dirname(__file__), "triton", "backends", "dicp_triton")
+        os.makedirs(dicp_triton_dst_dir, exist_ok=True)
+
+        shutil.copy(
+            os.path.join(tools_src_dir, "triton-shared-opt"),
+            os.path.join(dicp_triton_dst_dir, "triton-shared-opt-v3_2")
+        )
+        shutil.copy(
+            os.path.join(dicp_opt_src, "dicp_opt"),
+            dicp_triton_dst_dir
+        )
 
 nvidia_version_path = os.path.join(get_base_dir(), "cmake", "nvidia-toolchain-version.json")
 with open(nvidia_version_path, "r") as nvidia_version_file:
